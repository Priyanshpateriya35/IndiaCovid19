{"version":3,"sources":["Covid.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setdata","getCovidData","a","fetch","Response","json","actualdata","statewise","console","log","useEffect","className","style","recovered","confirmed","deaths","active","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA0FeA,MAvFd,WAED,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,+EAGKC,MAAM,2CAHX,cAGZC,EAHY,gBAKMA,EAASC,OALf,OAKbC,EALa,OAQnBN,EAAQM,EAAWC,UAAU,IARV,kDAWhBC,QAAQC,IAAR,MAXgB,0DAAH,qDAoBf,OALFC,qBAAU,WACVT,MAEG,IAGE,qCACA,sBAAKU,UAAU,+BAAf,UACA,oBAAIA,UAAU,kBAAd,+BACA,oBAAIA,UAAU,aAAd,6CAEA,sBAAKA,UAAU,iBAAf,UAEG,sBAAKA,UAAU,gDAAgDC,MAAO,GAAtE,UACP,oBAAID,UAAU,eAAd,qBACA,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,wBAKJ,sBAAKA,UAAU,8CAA8CC,MAAO,GAApE,UACE,oBAAID,UAAU,eAAd,uBACA,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,mBAAGA,UAAU,aAAb,SAA2BZ,EAAKc,kBAIpC,sBAAKF,UAAU,8CAA8CC,MAAO,GAApE,UACE,oBAAID,UAAU,eAAd,uBACA,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,mBAAGA,UAAU,aAAb,SAA2BZ,EAAKe,kBAIpC,sBAAKH,UAAU,6CAA6CC,MAAO,GAAnE,UACE,oBAAID,UAAU,eAAd,oBACA,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,mBACA,mBAAGA,UAAU,aAAb,SAA2BZ,EAAKgB,eAIlC,sBAAKJ,UAAU,8CAA8CC,MAAO,GAApE,UACE,oBAAID,UAAU,eAAd,oBACA,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,mBACA,mBAAGA,UAAU,aAAb,SAA2BZ,EAAKiB,eAKlC,sBAAKL,UAAU,2CAA2CC,MAAO,GAAjE,UACE,oBAAID,UAAU,eAAd,qBACA,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,mBACA,mBAAGA,UAAU,aAAb,SAA2BZ,EAAKkB,+BClEnBC,G,YATJ,WACT,OACE,8BACE,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.de43644e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'; \r\nimport './Covid.css'\r\n function Covid() {\r\n// fetching code start\r\nconst [data, setdata] = useState([])\r\n\r\nconst getCovidData = async () =>{\r\n  try{\r\n     \r\n   const Response = await fetch(\"https://data.covid19india.org/data.json\");\r\n\r\n  const actualdata = await Response.json();\r\n  //console.log(actualdata.statewise[0]);\r\n\r\n  setdata(actualdata.statewise[0])\r\n  \r\n  }catch (err){\r\n     console.log(err);\r\n  }\r\n\r\n}\r\n useEffect(() => {\r\n getCovidData();\r\n //first refresh only one time run []\r\n }, [])\r\n//fetching code End\r\n   return (\r\n      <>\r\n      <div className='text-center m-4 bg-light p-2'>\r\n      <h4 className=\"Live card-title\">ðŸ”´ LIVE</h4>\r\n      <h2 className='card-title'>COVID-19 CORONAVIRUS TRACKER</h2>\r\n      </div>\r\n      <div className=\"card-group m-4\">\r\n         \r\n         <div className=\"card text-white bg-secondary mb-5 text-center\" style={{}}>\r\n  <h1 className=\"card-header \">Country</h1>\r\n  <div className=\"card-body\">\r\n    <h2 className=\"card-title\">India</h2>\r\n\r\n  </div>\r\n</div>\r\n\r\n<div className=\"card text-white bg-primary mb-5 text-center\" style={{}}>\r\n  <h1 className=\"card-header \">Recovered</h1>\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">Total</h5>\r\n    <p className=\"card-title\">{data.recovered}</p>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"card text-white bg-success mb-5 text-center\" style={{}}>\r\n  <h1 className=\"card-header \">Confirmed</h1>\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">Total</h5>\r\n    <p className=\"card-title\">{data.confirmed}</p>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"card text-white bg-danger mb-5 text-center\" style={{}}>\r\n  <h1 className=\"card-header \">Deaths</h1>\r\n  <div className=\"card-body\">\r\n  <h5 className=\"card-title\">Total</h5>\r\n  <p className=\"card-title\">{data.deaths}</p>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"card text-white bg-warning mb-5 text-center\" style={{}}>\r\n  <h1 className=\"card-header \">Active</h1>\r\n  <div className=\"card-body\">\r\n  <h5 className=\"card-title\">Total</h5>\r\n  <p className=\"card-title\">{data.active}</p>\r\n\r\n  </div>\r\n</div>\r\n\r\n<div className=\"card text-white bg-info mb-5 text-center\" style={{}}>\r\n  <h1 className=\"card-header \">Updated</h1>\r\n  <div className=\"card-body\">\r\n  <h5 className=\"card-title\">Total</h5>\r\n  <p className=\"card-title\">{data.lastupdatedtime}</p>\r\n  </div>\r\n</div>\r\n\r\n\r\n      </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Covid;","import React from 'react';\r\nimport Covid from './Covid.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\n\r\n const App=() => {\r\n  return (\r\n    <div>\r\n      <Covid />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}